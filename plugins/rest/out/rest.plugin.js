// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = function(BasePlugin) {
    var RestPlugin;
    return RestPlugin = (function(_super) {

      __extends(RestPlugin, _super);

      function RestPlugin() {
        return RestPlugin.__super__.constructor.apply(this, arguments);
      }

      RestPlugin.prototype.name = 'rest';

      RestPlugin.prototype.serverAfter = function(_arg, next) {
        var config, docpad, server,
          _this = this;
        server = _arg.server;
        docpad = this.docpad;
        config = this.config;
        server.post(/./, function(req, res, next) {
          docpad.log("info", "Request url = " + req.url);
          docpad.log("info", "Request body = " + (JSON.stringify(req.body, null, 4)));
          if (config.requireAuthentication && docpad.getPlugin('authenticate').isMaintainer() === false) {
            res.send(405);
            return next();
          }
          docpad.log("info", "Authentication OK or not needed");
          docpad.log("info", "Documents collection = " + (JSON.stringify(docpad.getCollection('documents'), null, 4)));
          return docpad.getCollection('documents').findOne({
            url: req.url
          }, function(err, document) {
            var key, value, _ref;
            docpad.log("info", "Searching document...");
            docpad.log("info", "Error ? : " + (JSON.stringify(err, null, 4)));
            if (err) {
              return next(err);
            }
            docpad.log("info", "Document found = " + (JSON.stringify(document, null, 4)));
            if (!document) {
              return next();
            }
            _ref = req.body;
            for (key in _ref) {
              if (!__hasProp.call(_ref, key)) continue;
              value = _ref[key];
              if (document.meta.attributes[key] != null) {
                document.meta.set({
                  key: value
                });
              }
            }
            return document.write(function(err) {
              if (err) {
                return next(err);
              }
              return res.send(JSON.stringify({
                success: true
              }));
            });
          });
        });
        return next();
      };

      return RestPlugin;

    })(BasePlugin);
  };

}).call(this);
